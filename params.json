{"name":"Go-instagram","tagline":"Go library for accessing Instagram REST and Search APIs","body":"go-instagram\r\n============\r\n\r\ngo-instagram is Go library for accessing Instagram REST and Search APIs.\r\n\r\n**Documentation:** <http://godoc.org/github.com/gedex/go-instagram/instagram>\r\n\r\n**Build Status:** [![Build Status](https://travis-ci.org/gedex/go-instagram.png?branch=master)](https://travis-ci.org/gedex/go-instagram)\r\n\r\n## Basic Usage\r\n\r\nAccess different parts of the Instagram API using the various services on a Instagram\r\nClient:\r\n\r\n~~~go\r\n// You can optionally pass your own HTTP's client, otherwise pass it with nil.\r\nclient := instagram.NewClient(nil)\r\n~~~\r\n\r\nYou can then optionally set ClientID, ClientSecret and AccessToken:\r\n\r\n~~~go\r\nclient.ClientID = \"8f2c0ad697ea4094beb2b1753b7cde9c\"\r\n~~~\r\n\r\nWith client object set, you can communicate with Instagram endpoints:\r\n\r\n~~~go\r\n// Gets the most recent media published by a user with id \"3\"\r\nmedia, next, err := client.Users.RecentMedia(\"3\", nil)\r\n~~~\r\n\r\nSet optional parameters for an API method by passing an Parameters object.\r\n\r\n~~~go\r\n// Gets user's feed.\r\nopt := &instagram.Parameters{Count: 3}\r\nmedia, next, err := client.Users.RecentMedia(\"3\", opt)\r\n~~~\r\n\r\nPlease see [examples/example.go](./examples/example.go) for a complete example.\r\n\r\n## Data Retrieval\r\n\r\nThe methods which return slice in first return value will return three values (data, pagination, and error).\r\nHere's an example of retrieving popular media:\r\n\r\n~~~\r\nmedia, next, err := client.Media.Popular()\r\nif err != nil {\r\n\tfmt.Fprintf(os.Stderr, \"Error: %v\\n\", err)\r\n}\r\nfor _, m := range media {\r\n\tfmt.Printf(\"ID: %v, Type: %v\\n\", m.ID, m.Type)\r\n}\r\nif next.NextURL != \"\" {\r\n\tfmt.Println(\"Next URL\", next.NextURL)\r\n}\r\n~~~\r\n\r\nIf a single type is returned in first return value, then only two values returned. Here's an example\r\nof retrieving user's information:\r\n\r\n~~~\r\nuser, err := client.Users.Get(\"3\")\r\nif err != nil {\r\n\tfmt.Fprintf(os.Stderr, \"Error: %v\\n\", err)\r\n}\r\nfmt.Println(\"Username\", user.Username)\r\n~~~\r\n\r\n## Credits\r\n\r\n* [go-github](https://github.com/google/go-github) in which this library mimics the structure.\r\n  LICENSE for go-github is included in [go-github-LICENSE.md](./go-github-LICENSE.md)\r\n* [python-instagram](https://github.com/Instagram/python-instagram)\r\n* [Instagram endpoints docs](http://instagram.com/developer/endpoints/)\r\n\r\n## License\r\n\r\nThis library is distributed under the BSD-style license found in the LICENSE file.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}